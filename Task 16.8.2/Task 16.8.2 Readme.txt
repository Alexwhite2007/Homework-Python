Задача 16.8.2. Рассчитываем площади геометрических фигур на основе полиморфизма

Итак, у нас есть класс Rectangle с двумя параметрами: ширина и высота (a и b). Мы можем найти площадь прямоугольника.
Для этого нужно длину умножить на высоту (строка кода 6). Для решения используем специальный метод get_area.
Он принимает аргумент self, то есть сам класс Rectangle, и возвращает произведение атрибута a (ширина) на b (высота). 
Создадим файл rectangle_2.py в отдельной директории в папке. Выполним импорт класса Rectangle
Добавим в нашу программу еще два объекта, например Square (квадрат) и Circle (круг), где квадрат принимает в качестве аргумента одну сторону, а круг - радиус.
Добавляем данные в исходный файл rectangle.py - новые классы квадрат и круг.
Переходим в файл rectangle_2.py и импортируем наши новые объекты:
Теперь мы хотим в нашей программе все объекты перенести в единую коллекцию. Назовем фигуры (figures).
Коллекция содержит список, в который мы помещаем наш первый прямоугольник, квадрат и т.д.
Далее пройдемся по циклу for, это необходимо, чтобы найти площадь каждой фигуры, сохраненной в списке figures. Обратите внимание,
мы будем работать с фигурами с помощью разных методов: get_area_rectangle(), get_area_circle() и get_area_square(). Внутри цикла проверяем: 
Если экземпляр класса figure является квадратом, то вызываем метод get_area_square(), если кругом - то вызываем метод get_area_circle().
В противном случае — обрабатываем данные для прямоугольника методом get_area_rectangle().
В условии есть функция isinstance, поддерживающая наследование. Она проверяет, является ли аргумент объекта экземпляром класса или экземпляром класса из кортежа.
В случае если является, функция возвращает True, если не является — False. 
